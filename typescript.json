{
  // Place your snippets for typescript here. Each snippet is defined under a snippet name and has a prefix, body and 
  // description. The prefix is what is used to trigger the snippet and the body will be expanded and inserted. Possible variables are:
  // $1, $2 for tab stops, $0 for the final cursor position, and ${1:label}, ${2:another} for placeholders. Placeholders with the 
  // same ids are connected.
  // Example:
  // "Print to console": {
  // 	"prefix": "log",
  // 	"body": [
  // 		"console.log('$1');",
  // 		"$2"
  // 	],
  // 	"description": "Log output to console"
  // }
  "comment first line": {
    "prefix": "comment",
    "body": [
      "${BLOCK_COMMENT_START}! *****************************************************************************",
      "fileName    : ${TM_FILENAME} ",
      "author      : 114233763@qq.com",
      "date        : ${CURRENT_YEAR}-${CURRENT_MONTH}-${CURRENT_DATE} ${CURRENT_HOUR}:${CURRENT_MINUTE}:${CURRENT_SECOND}",
      "version     : v1",
      "description : $1",
      "***************************************************************************** ${BLOCK_COMMENT_END}\n"
    ],
    "description": "typescript comment of first line"
  },
  "scaffold vue store": {
    "prefix": "scaffold vue store",
    "body": [
      "import { ActionContext } from \"vuex\";",
      "/**",
      " * 全局状态测试类型",
      " */",
      "export class ${1:${TM_FILENAME_BASE/(-|^|\\.)([a-z])/${2:/capitalize}/g}} {",
      "  num: number = 0;",
      "}",
      "",
      "export default {",
      "  namespaced: true,",
      "  /**",
      "   * 状态",
      "   */",
      "  state: new $1(),",
      "  /**",
      "   * 获取器",
      "   */",
      "  getters: {",
      "    num: (state: $1) => state.num,",
      "  },",
      "  /**",
      "   * 行为",
      "   */",
      "  actions: {",
      "    add({ commit }: ActionContext<$1, object>, payload: any) {",
      "      commit(\"HANDLE_ADD_NUM\", 1);",
      "    },",
      "    sub({ commit }: ActionContext<$1, object>) {",
      "      commit(\"HANDLE_SUB_ONE\");",
      "    },",
      "    save({ commit }: ActionContext<$1, object>, payload: any) {",
      "      commit(\"HANDLE_SAVE\", payload);",
      "    },",
      "  },",
      "  /**",
      "   * 突变",
      "   */",
      "  mutations: {",
      "    //加指定的数字",
      "    HANDLE_ADD_NUM(state: $1, num: number) {",
      "      state.num += num;",
      "    },",
      "    //固定减掉一",
      "    HANDLE_SUB_ONE(state: $1) {",
      "      state.num -= 1;",
      "    },",
      "    //全部保存",
      "    HANDLE_SAVE(state: $1, payload: any) {",
      "      Object.assign(state, payload);",
      "    }",
      "  },",
      "};",
    ],
    "description": "template of vue store"
  },
  "scaffold vuex store template": {
    "prefix": "scaffold vuex store",
    "body": [
      "import { ActionContext } from \"vuex\";",
      "",
      "export class ${1:${TM_FILENAME_BASE/(-|^|\\.)([a-z])/${2:/capitalize}/g}} {",
      "  num = 0;",      
      "}",
      "",
      "// 状态",
      "const state = new $1();",
      "",
      "// 获取器",
      "const getters = {",
      "  num: (state: $1) => state.num",
      "};",
      "",
      "// 行为",
      "const actions = {",
      "  add({ commit }: ActionContext<$1, object>, payload: any) {",
      "    commit(\"HANDLE_ADD_NUM\", 1);",
      "  },",
      "  sub({ commit }: ActionContext<$1, object>) {",
      "    commit(\"HANDLE_SUB_ONE\");",
      "  },",
      "  save({ commit }: ActionContext<$1, object>, payload:any) {",
      "    commit(\"HANDLE_SAVE\", payload);",
      "  },",
      "};",
      "",
      "// 突变",
      "const mutations = {",
      "  //加指定的数字",
      "  HANDLE_ADD_NUM(state: $1, num: number) {",
      "    state.num += num;",
      "  },",
      "  //固定减掉一",
      "  HANDLE_SUB_ONE(state: $1) {",
      "    state.num -= 1;",
      "  },",
      "  //全部保存",
      "  HANDLE_SAVE(state: $1, payload: any) {",
      "    Object.assign(state, payload);",
      "  }",
      "};",
      "",
      "export default {",
      "  namespaced: true,",
      "  state,",
      "  getters,",
      "  actions,",
      "  mutations",
      "};"
    ],
    "description": "vuex store template"
  }
}