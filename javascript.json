{
	// Place your snippets for javascript here. Each snippet is defined under a snippet name and has a prefix, body and 
	// description. The prefix is what is used to trigger the snippet and the body will be expanded and inserted. Possible variables are:
	// $1, $2 for tab stops, $0 for the final cursor position, and ${1:label}, ${2:another} for placeholders. Placeholders with the 
	// same ids are connected.
	// Example:
	// "Print to console": {
	// 	"prefix": "log",
	// 	"body": [
	// 		"console.log('$1');",
	// 		"$2"
	// 	],
	// 	"description": "Log output to console"
	// }
	"comment first line": {
		"prefix": "comment",
		"body": [
			"${BLOCK_COMMENT_START}! *****************************************************************************",
			"fileName    : ${TM_FILENAME} ",
			"author      : 114233763@qq.com",
			"date        : ${CURRENT_YEAR}-${CURRENT_MONTH}-${CURRENT_DATE} ${CURRENT_HOUR}:${CURRENT_MINUTE}:${CURRENT_SECOND}",
			"version     : v1",
			"description : $1",
			"***************************************************************************** ${BLOCK_COMMENT_END}\n"
		],
		"description": "Log output to console"
	},
	"rn component": {
		"prefix": "rn component",
		"body": [
			"import React, { Component } from \"react\";",
			"import { Text, StyleSheet, View } from \"react-native\";",
			"import PropTypes from \"prop-types\";",
			"",
			"/**",
			" * ${1:${TM_FILENAME_BASE/(-|^|\\.)([a-z])/${2:/capitalize}/g}}",
			" */",
			"export default class $1 extends Component {",
			"  static propTypes = {",
			"    style: PropTypes.object",
			"  };",
			"  static defaultProps = {",
			"    style: {}",
			"  };",
			"  render() {",
			"    const { style } = this.props;",
			"    return (",
			"      <View style={[styles.${2:${TM_FILENAME_BASE/(^)([A-Z])/${2:/downcase}/}}, style]}>",
			"        <Text style={styles.$2}>$1</Text>",
			"      </View>",
			"    );",
			"  }",
			"}",
			"",
			"const styles = StyleSheet.create({",
			"  $2: {}",
			"});"
		]
	},
	"rn connect": {
		"prefix": "rn connect",
		"body": [
			"/* 将全局状态添加到当前类中 */\n",
			"import { connect } from 'react-redux';\n",
			"const mapStateToProps = state => ({",
			"});",
			"const mapDispatchToProps = dispatch => {",
			"  return {",
			"    fn(){",
			"      dispatch({type:\"todo\"});",
			"    }",
			"  };",
			"};",
			"export default connect(mapStateToProps, mapDispatchToProps)(${TM_FILENAME_BASE})"
		]
	}
}