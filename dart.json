{
	// Place your snippets for dart here. Each snippet is defined under a snippet name and has a prefix, body and 
	// description. The prefix is what is used to trigger the snippet and the body will be expanded and inserted. Possible variables are:
	// $1, $2 for tab stops, $0 for the final cursor position, and ${1:label}, ${2:another} for placeholders. Placeholders with the 
	// same ids are connected.
	// Example:
	// "Print to console": {
	// 	"prefix": "log",
	// 	"body": [
	// 		"console.log('$1');",
	// 		"$2"
	// 	],
	// 	"description": "Log output to console"
	// }
	"comment first line": {
		"prefix": "comment first line",
		"body": [
		"/// ${TM_FILENAME}",		
		"/// author      : 114233763@qq.com",
		"/// date        : ${CURRENT_YEAR}-${CURRENT_MONTH}-${CURRENT_DATE} ${CURRENT_HOUR}:${CURRENT_MINUTE}:${CURRENT_SECOND}",
		"/// version     : v1",
		"/// description : $1",		
		],
		"description": "Log output to console"
	},
	"comment member": {
		"prefix": "comment member",
		"body": [
			"/// ${0:Parses a set of option strings. For each option:}",
			"///",
			"/// * If it is `null`, then it is ignored.",
		],
		"description": ["https://dart-lang.github.io/linter/lints/slash_for_doc_comments.html","https://www.markdownguide.org/cheat-sheet/"]
	},
	"scaffold main":{
		"prefix": "scaffold main",
		"body": [
			"void main() {",
			"  ${0}",
			"}"
		],
		"description": "template of main function"
	},
	"scaffold main async":{
		"prefix": "scaffold main async",
		"body": [
			"Future<void> main() async {",
			"  ${0}",
			"}"
		],
		"description": "template of async main function"
	},
	"scaffold stateless widget": {
		"prefix": "scaffold stateless widget",
		"body": [
			"import 'package:flutter/material.dart';\n",
			"class ${1:${TM_FILENAME_BASE/(_|^|\\.)([a-z])/${2:/capitalize}/g}} extends StatelessWidget {",
			"  @override",
			"  Widget build(BuildContext context) {",
			"    return Scaffold(",
			"      appBar: AppBar(",
			"        title: Text('${1}'),",
			"      ),",
			"      body: Column(",
			"        children: [",
			"          Text('${1}'),",
			"        ],",
			"      ),",
			"    );",
			"  }",
			"}\n"
		],
		"description": "template of stateless"
	},
	"scaffold state widget": {
		"prefix": "scaffold state widget",
		"body": [
			"import 'package:flutter/material.dart';\n",
			"class ${1:${TM_FILENAME_BASE/(_|^|\\.)([a-z])/${2:/capitalize}/g}} extends StatefulWidget {",
			"  @override",
			"  _${1} createState() => _${1}();",
			"}\n",
			"class _${1} extends State<${1}> {",
			"  @override",
			"  Widget build(BuildContext context) {",
			"    return Scaffold(",
			"      appBar: AppBar(",
			"        title: Text('${1}'),",
			"      ),",
			"      body: Column(",
			"        children: [",
			"          Text('${1}'),",
			"        ],",
			"      ),",
			"    );",
			"  }",
			"}\n"
		],
		"description": "template of state"
	},
	"scaffold animated widget": {
		"prefix": "scaffold animated widget",
		"body": [
			"import 'dart:math';",
			"import 'package:flutter/material.dart';\n",
			"class ${1:${TM_FILENAME_BASE/(_|^|\\.)([a-z])/${2:/capitalize}/g}} extends AnimatedWidget {",
			"  final double left;",
			"  final double top;",
			"  ${1}(",
			"      {Key key, Animation<double> animation, this.left, this.top})",
			"      : super(key: key, listenable: animation);",
			"",
			"  @override",
			"  Widget build(BuildContext context) {",
			"    final Animation<double> animation = listenable;",
			"    return Positioned(",
			"      child: Transform.rotate(",
			"        child: Container(",
			"          child: Text('${1}'),",
			"          color: Colors.yellow,",
			"          width: 50,",
			"          height: 50,",
			"        ),",
			"        angle: pi / 180 * animation.value,",
			"      ),",
			"      left: left,",
			"      top: top,",
			"    );",
			"  }",
			"}\n"
		],
		"description": "template of state"
	}
}