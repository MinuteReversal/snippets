{
	// Place your snippets for dart here. Each snippet is defined under a snippet name and has a prefix, body and 
	// description. The prefix is what is used to trigger the snippet and the body will be expanded and inserted. Possible variables are:
	// $1, $2 for tab stops, $0 for the final cursor position, and ${1:label}, ${2:another} for placeholders. Placeholders with the 
	// same ids are connected.
	// Example:
	// "Print to console": {
	// 	"prefix": "log",
	// 	"body": [
	// 		"console.log('$1');",
	// 		"$2"
	// 	],
	// 	"description": "Log to console"
	// }
	"comment first line": {
		"prefix": "comment first line",
		"body": [
		"/// ${TM_FILENAME}",		
		"/// author      : 114233763@qq.com",
		"/// date        : ${CURRENT_YEAR}-${CURRENT_MONTH}-${CURRENT_DATE} ${CURRENT_HOUR}:${CURRENT_MINUTE}:${CURRENT_SECOND}",
		"/// version     : v1",
		"/// description : $1",		
		],
		"description": "Log output to console"
	},
	"comment member": {
		"prefix": "comment member",
		"body": [
			"/// ${0:Parses a set of option strings. For each option:}",
			"///",
			"/// * If it is `null`, then it is ignored.",
		],
		"description": ["https://dart-lang.github.io/linter/lints/slash_for_doc_comments.html","https://www.markdownguide.org/cheat-sheet/"]
	},
	"scaffold main":{
		"prefix": "scaffold main",
		"body": [
			"void main() {",
			"  ${0}",
			"}"
		],
		"description": "template of main function"
	},
	"scaffold main async":{
		"prefix": "scaffold main async",
		"body": [
			"Future<void> main() async {",
			"  ${0}",
			"}"
		],
		"description": "template of async main function"
	},
	"scaffold stateless widget": {
		"prefix": "scaffold stateless widget",
		"body": [
			"import 'package:flutter/material.dart';\n",
			"class ${1:${TM_FILENAME_BASE/(_|^|\\.)([a-z])/${2:/capitalize}/g}} extends StatelessWidget {",
			"  @override",
			"  Widget build(BuildContext context) {",
			"    return Scaffold(",
			"      appBar: AppBar(",
			"        title: Text('${1}'),",
			"      ),",
			"      body: Column(",
			"        children: [",
			"          Text('${1}'),",
			"        ],",
			"      ),",
			"    );",
			"  }",
			"}\n"
		],
		"description": "template of stateless"
	},
	"scaffold animated builder widget":{
		"prefix": "scaffold animated builder widget",
		"body": [
			"import 'package:flutter/material.dart';",
			"",
			"class ${1:${TM_FILENAME_BASE/(_|^|\\.)([a-z])/${2:/capitalize}/g}} extends StatefulWidget {",
			"  @override",
			"  _${1} createState() => _${1}();",
			"}",
			"",
			"class _${1} extends State<${1}>",
			"    with SingleTickerProviderStateMixin {",
			"  Animation<double> animation;",
			"  AnimationController controller;",
			"",
			"  @override",
			"  void initState() {",
			"    super.initState();",
			"    controller = new AnimationController(",
			"      duration: const Duration(seconds: 3),",
			"      vsync: this,",
			"    );",
			"    //使用弹性曲线",
			"    animation = CurvedAnimation(parent: controller, curve: Curves.easeIn);",
			"    //图片宽高从0变到300",
			"    animation = new Tween(begin: 0.0, end: 300.0).animate(animation);",
			"  }",
			"",
			"  void onTapUp(TapUpDetails details) {",
			"    controller.reverse();",
			"  }",
			"",
			"  void onTapDown(TapDownDetails details) {",
			"    controller.forward();",
			"  }",
			"",
			"  @override",
			"  Widget build(BuildContext context) {",
			"    return AnimatedBuilder(",
			"      animation: animation,",
			"      builder: (BuildContext context, Widget child) {",
			"        return Scaffold(",
			"          appBar: AppBar(",
			"            title: Text('${1}'),",
			"          ),",
			"          body: ConstrainedBox(",
			"            child: Stack(",
			"              children: <Widget>[",
			"                Positioned(",
			"                  top: 60,",
			"                  left: 10,",
			"                  child: GestureDetector(",
			"                    onTapUp: onTapUp,",
			"                    onTapDown: onTapDown,",
			"                    child: Text('长按'),",
			"                  ),",
			"                ),",
			"                Positioned(",
			"                  left: animation.value,",
			"                  child: ClipOval(",
			"                    child: Container(",
			"                      height: 50,",
			"                      width: 50,",
			"                      alignment: Alignment.center,",
			"                      color: Colors.blue,",
			"                      child: Text(",
			"                        'A',",
			"                        style: TextStyle(color: Colors.white),",
			"                      ),",
			"                    ),",
			"                  ),",
			"                ),",
			"              ],",
			"            ),",
			"            constraints: BoxConstraints.expand(),",
			"          ),",
			"        );",
			"      },",
			"    );",
			"  }",
			"",
			"  @override",
  		"  void dispose() {",
      "    controller.dispose();",
      "    super.dispose();",
			"  }",
			"}\n"
		]		
	},
	"scaffold stateless animated builder widget": {
		"prefix": "scaffold stateless animated builder widget",
		"body": [
			"import 'dart:math';",
			"import 'package:flutter/material.dart';",
			"",
			"class ${1:${TM_FILENAME_BASE/(_|^|\\.)([a-z])/${2:/capitalize}/g}} extends StatelessWidget {",
			"  final double top;",
			"  final double right;",
			"  final double left;",
			"  final double bottom;",
			"  final Animation<double> animation;",
			"",
			"  ${1}({",
			"    this.animation,",
			"    this.top,",
			"    this.right,",
			"    this.bottom,",
			"    this.left,",
			"  });",
			"",
			"  @override",
			"  Widget build(BuildContext context) {",
			"    return AnimatedBuilder(",
			"      animation: animation,",
			"      builder: (BuildContext context, Widget child) {",
			"        return Positioned(",
			"          child: Transform.rotate(",
			"            child: Container(",
			"              child: Text('${1}'),",
			"              color: Colors.yellow,",
			"              width: 50,",
			"              height: 50,",
			"            ),",
			"            angle: pi / 180 * animation.value,",
			"          ),",
			"          top: top,",
			"          right: right,",
			"          bottom: bottom,",
			"          left: left,",
			"        );",
			"      },",
			"    );",
			"  }",
			"}\n",
		],
		"description": "template of stateless"
	},
	"scaffold state widget": {
		"prefix": "scaffold state widget",
		"body": [
			"import 'package:flutter/material.dart';\n",
			"class ${1:${TM_FILENAME_BASE/(_|^|\\.)([a-z])/${2:/capitalize}/g}} extends StatefulWidget {",
			"  @override",
			"  _${1} createState() => _${1}();",
			"}\n",
			"class _${1} extends State<${1}> {",
			"  @override",
			"  Widget build(BuildContext context) {",
			"    return Scaffold(",
			"      appBar: AppBar(",
			"        title: Text('${1}'),",
			"      ),",
			"      body: Column(",
			"        children: [",
			"          Text('${1}'),",
			"        ],",
			"      ),",
			"    );",
			"  }",
			"}\n"
		],
		"description": "template of state"
	},
	"scaffold animated widget": {
		"prefix": "scaffold animated widget",
		"body": [
			"import 'dart:math';",
			"import 'package:flutter/material.dart';\n",
			"class ${1:${TM_FILENAME_BASE/(_|^|\\.)([a-z])/${2:/capitalize}/g}} extends AnimatedWidget {",
			"  final double left;",
			"  final double top;",
			"  ${1}({",
			"    Key key,",
			"    Animation<double> animation,",
			"    @required this.left,",
			"    @required this.top,",
			"  }) : super(key: key, listenable: animation);",
			"",
			"  @override",
			"  Widget build(BuildContext context) {",
			"    final Animation<double> animation = listenable;",
			"    return Positioned(",
			"      child: Transform.rotate(",
			"        child: Container(",
			"          child: Text('${1}'),",
			"          color: Colors.yellow,",
			"          width: 50,",
			"          height: 50,",
			"        ),",
			"        angle: pi / 180 * animation.value,",
			"      ),",
			"      left: left,",
			"      top: top,",
			"    );",
			"  }",
			"}\n"
		],
		"description": "template of state"
	}
}