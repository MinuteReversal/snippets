{
  // Place your snippets for vue here. Each snippet is defined under a snippet name and has a prefix, body and 
  // description. The prefix is what is used to trigger the snippet and the body will be expanded and inserted. Possible variables are:
  // $1, $2 for tab stops, $0 for the final cursor position, and ${1:label}, ${2:another} for placeholders. Placeholders with the 
  // same ids are connected.
  // Example:
  // "Print to console": {
  // 	"prefix": "log",
  // 	"body": [
  // 		"console.log('$1');",
  // 		"$2"
  // 	],
  // 	"description": "Log output to console"
  // }
  "scaffold vue ts": {
    "prefix": "scaffold",
    "body": [
      "<template>",
      "  <div class=\"${1:${TM_FILENAME_BASE/(\\w)([A-Z])?/${1:/downcase}${2:+-}${2:/downcase}/g}}\">",
      "    <p>${2:${TM_FILENAME_BASE/(-|^|\\.)([a-z])/${2:/capitalize}/g}}</p>",
      "  </div>",
      "</template>\n",
      "<script lang=\"ts\">",
      "import { Vue, Component, Prop, Watch } from \"vue-property-decorator\";",
      "import {} from \"vuex-class\";\n",
      "@Component",
      "export default class ${2} extends Vue {${0}}",
      "</script>\n",
      "<style lang=\"scss\">",
      ".${1} {",
      "  display: block;",
      "}",
      "</style>\n"
    ],
    "description": "basic template of vue"
  },
  "scaffold vue js": {
    "prefix": "scaffold",
    "body": [
      "<template>",
      "  <div class=\"${1:${TM_FILENAME_BASE/(\\w)([A-Z])?/${1:/downcase}${2:+-}${2:/downcase}/g}}\">",
      "    <p>${2:${TM_FILENAME_BASE/(-|^|\\.)([a-z])/${2:/capitalize}/g}}</p>",
      "  </div>",
      "</template>\n",
      "<script>",
      "export default {${0}}",
      "</script>\n",
      "<style lang=\"scss\">",
      ".${1} {",
      "  display: block;",
      "}",
      "</style>\n"
    ]
  },
  "scaffold wepy page": {
    "prefix": "scaffold wepy page",
    "body": [
      "<style lang=\"less\">",
      ".${1:${TM_FILENAME_BASE/(\\w)([A-Z])?/${1:/downcase}${2:+-}${2:/downcase}/g}} {",
      "  display: block;",
      "}",
      "</style>",
      "<template>",
      "  <div class=\"${1}\">",
      "      ${2:${TM_FILENAME_BASE/(-|^|\\.)([a-z])/${2:/capitalize}/g}}",
      "  </div>",
      "</template>",
      "<script lang=\"typescript\">",
      "import wepy from '@wepy/core';",
      "wepy.page({ });",
      "</script>",
      "<config>",
      "{",
      "  navigationBarTitleText: '${2}',",
      "  \"usingComponents\": {",
      "  }",
      "}",
      "</config>",
    ]
  },
  "scaffold wepy component": {
    "prefix": "scaffold wepy component",
    "body": [
      "<style lang=\"less\">",
      ".${1:${TM_FILENAME_BASE/(\\w)([A-Z])?/${1:/downcase}${2:+-}${2:/downcase}/g}} {",
      "  display: block;",
      "}",
      "</style>",
      "<template>",
      "  <div class=\"${1}\">",
      "      ${2:${TM_FILENAME_BASE/(-|^|\\.)([a-z])/${2:/capitalize}/g}}",
      "  </div>",
      "</template>",
      "<script lang=\"typescript\">",
      "import wepy from '@wepy/core';",
      "wepy.component({ });",
      "</script>",
      "<config>",
      "{",
      "  \"usingComponents\": {",
      "  }",
      "}",
      "</config>",
    ]
  },
  "scaffold wepy store component": {
    "prefix": "scaffold wepy store component",
    "body": [
      "<style lang=\"less\">",
      ".${1:${TM_FILENAME_BASE/(\\w)([A-Z])?/${1:/downcase}${2:+-}${2:/downcase}/g}} {",
      "  display: block;",
      "}",
      "</style>",
      "<template>",
      "  <div class=\"${1}\">",
      "      ${2:${TM_FILENAME_BASE/(-|^|\\.)([a-z])/${2:/capitalize}/g}}",
      "  </div>",
      "</template>",
      "<script lang=\"typescript\">",
      "import wepy from '@wepy/core';",
      "import store from '../store';",
      "import { mapState, mapActions} from '@wepy/x';",
      "wepy.component({",
      "  store,",
      "  computed:{",
      "    ...mapState([])",
      "  },",
      "  methods:{",
      "    ...mapActions([])",
      "  }",
      "});",
      "</script>",
      "<config>",
      "{",
      "  \"usingComponents\": {",
      "  }",
      "}",
      "</config>",
    ]
  },
  "comment first line": {
    "prefix": "comment",
    "body": [
      "${BLOCK_COMMENT_START}! *****************************************************************************",
      "fileName    : ${TM_FILENAME} ",
      "author      : 114233763@qq.com",
      "date        : ${CURRENT_YEAR}-${CURRENT_MONTH}-${CURRENT_DATE} ${CURRENT_HOUR}:${CURRENT_MINUTE}:${CURRENT_SECOND}",
      "version     : v1",
      "description : $1",
      "***************************************************************************** ${BLOCK_COMMENT_END}"
    ],
    "description": "Log output to console"
  },
  "comment html": {
    "prefix": "comment",
    "body": [
      "<!------------------------------------------------------------------------------",
      "| fileName    : ${TM_FILENAME}                                                      |",
      "| author      : 114233763@qq.com                                               |",
      "| date        : ${CURRENT_YEAR}-${CURRENT_MONTH}-${CURRENT_DATE} ${CURRENT_HOUR}:${CURRENT_MINUTE}:${CURRENT_SECOND}                                            |",
      "| version     : v1                                                             |",
      "| description :  $1                                                              |",
      "------------------------------------------------------------------------------->"
    ],
    "description": "Log output to console"
  }
}